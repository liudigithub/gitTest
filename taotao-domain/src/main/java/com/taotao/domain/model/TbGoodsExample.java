package com.taotao.domain.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TbGoodsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_goods
     *
     * @mbggenerated Fri Dec 16 15:03:09 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_goods
     *
     * @mbggenerated Fri Dec 16 15:03:09 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_goods
     *
     * @mbggenerated Fri Dec 16 15:03:09 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_goods
     *
     * @mbggenerated Fri Dec 16 15:03:09 CST 2016
     */
    public TbGoodsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_goods
     *
     * @mbggenerated Fri Dec 16 15:03:09 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_goods
     *
     * @mbggenerated Fri Dec 16 15:03:09 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_goods
     *
     * @mbggenerated Fri Dec 16 15:03:09 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_goods
     *
     * @mbggenerated Fri Dec 16 15:03:09 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_goods
     *
     * @mbggenerated Fri Dec 16 15:03:09 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_goods
     *
     * @mbggenerated Fri Dec 16 15:03:09 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_goods
     *
     * @mbggenerated Fri Dec 16 15:03:09 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_goods
     *
     * @mbggenerated Fri Dec 16 15:03:09 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_goods
     *
     * @mbggenerated Fri Dec 16 15:03:09 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_goods
     *
     * @mbggenerated Fri Dec 16 15:03:09 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_goods
     *
     * @mbggenerated Fri Dec 16 15:03:09 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andBigIdIsNull() {
            addCriterion("bigId is null");
            return (Criteria) this;
        }

        public Criteria andBigIdIsNotNull() {
            addCriterion("bigId is not null");
            return (Criteria) this;
        }

        public Criteria andBigIdEqualTo(Integer value) {
            addCriterion("bigId =", value, "bigId");
            return (Criteria) this;
        }

        public Criteria andBigIdNotEqualTo(Integer value) {
            addCriterion("bigId <>", value, "bigId");
            return (Criteria) this;
        }

        public Criteria andBigIdGreaterThan(Integer value) {
            addCriterion("bigId >", value, "bigId");
            return (Criteria) this;
        }

        public Criteria andBigIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("bigId >=", value, "bigId");
            return (Criteria) this;
        }

        public Criteria andBigIdLessThan(Integer value) {
            addCriterion("bigId <", value, "bigId");
            return (Criteria) this;
        }

        public Criteria andBigIdLessThanOrEqualTo(Integer value) {
            addCriterion("bigId <=", value, "bigId");
            return (Criteria) this;
        }

        public Criteria andBigIdIn(List<Integer> values) {
            addCriterion("bigId in", values, "bigId");
            return (Criteria) this;
        }

        public Criteria andBigIdNotIn(List<Integer> values) {
            addCriterion("bigId not in", values, "bigId");
            return (Criteria) this;
        }

        public Criteria andBigIdBetween(Integer value1, Integer value2) {
            addCriterion("bigId between", value1, value2, "bigId");
            return (Criteria) this;
        }

        public Criteria andBigIdNotBetween(Integer value1, Integer value2) {
            addCriterion("bigId not between", value1, value2, "bigId");
            return (Criteria) this;
        }

        public Criteria andSmallIdIsNull() {
            addCriterion("smallId is null");
            return (Criteria) this;
        }

        public Criteria andSmallIdIsNotNull() {
            addCriterion("smallId is not null");
            return (Criteria) this;
        }

        public Criteria andSmallIdEqualTo(Integer value) {
            addCriterion("smallId =", value, "smallId");
            return (Criteria) this;
        }

        public Criteria andSmallIdNotEqualTo(Integer value) {
            addCriterion("smallId <>", value, "smallId");
            return (Criteria) this;
        }

        public Criteria andSmallIdGreaterThan(Integer value) {
            addCriterion("smallId >", value, "smallId");
            return (Criteria) this;
        }

        public Criteria andSmallIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("smallId >=", value, "smallId");
            return (Criteria) this;
        }

        public Criteria andSmallIdLessThan(Integer value) {
            addCriterion("smallId <", value, "smallId");
            return (Criteria) this;
        }

        public Criteria andSmallIdLessThanOrEqualTo(Integer value) {
            addCriterion("smallId <=", value, "smallId");
            return (Criteria) this;
        }

        public Criteria andSmallIdIn(List<Integer> values) {
            addCriterion("smallId in", values, "smallId");
            return (Criteria) this;
        }

        public Criteria andSmallIdNotIn(List<Integer> values) {
            addCriterion("smallId not in", values, "smallId");
            return (Criteria) this;
        }

        public Criteria andSmallIdBetween(Integer value1, Integer value2) {
            addCriterion("smallId between", value1, value2, "smallId");
            return (Criteria) this;
        }

        public Criteria andSmallIdNotBetween(Integer value1, Integer value2) {
            addCriterion("smallId not between", value1, value2, "smallId");
            return (Criteria) this;
        }

        public Criteria andGoodsNameIsNull() {
            addCriterion("goodsName is null");
            return (Criteria) this;
        }

        public Criteria andGoodsNameIsNotNull() {
            addCriterion("goodsName is not null");
            return (Criteria) this;
        }

        public Criteria andGoodsNameEqualTo(String value) {
            addCriterion("goodsName =", value, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameNotEqualTo(String value) {
            addCriterion("goodsName <>", value, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameGreaterThan(String value) {
            addCriterion("goodsName >", value, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameGreaterThanOrEqualTo(String value) {
            addCriterion("goodsName >=", value, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameLessThan(String value) {
            addCriterion("goodsName <", value, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameLessThanOrEqualTo(String value) {
            addCriterion("goodsName <=", value, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameLike(String value) {
            addCriterion("goodsName like", value, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameNotLike(String value) {
            addCriterion("goodsName not like", value, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameIn(List<String> values) {
            addCriterion("goodsName in", values, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameNotIn(List<String> values) {
            addCriterion("goodsName not in", values, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameBetween(String value1, String value2) {
            addCriterion("goodsName between", value1, value2, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsNameNotBetween(String value1, String value2) {
            addCriterion("goodsName not between", value1, value2, "goodsName");
            return (Criteria) this;
        }

        public Criteria andGoodsFromIsNull() {
            addCriterion("goodsFrom is null");
            return (Criteria) this;
        }

        public Criteria andGoodsFromIsNotNull() {
            addCriterion("goodsFrom is not null");
            return (Criteria) this;
        }

        public Criteria andGoodsFromEqualTo(String value) {
            addCriterion("goodsFrom =", value, "goodsFrom");
            return (Criteria) this;
        }

        public Criteria andGoodsFromNotEqualTo(String value) {
            addCriterion("goodsFrom <>", value, "goodsFrom");
            return (Criteria) this;
        }

        public Criteria andGoodsFromGreaterThan(String value) {
            addCriterion("goodsFrom >", value, "goodsFrom");
            return (Criteria) this;
        }

        public Criteria andGoodsFromGreaterThanOrEqualTo(String value) {
            addCriterion("goodsFrom >=", value, "goodsFrom");
            return (Criteria) this;
        }

        public Criteria andGoodsFromLessThan(String value) {
            addCriterion("goodsFrom <", value, "goodsFrom");
            return (Criteria) this;
        }

        public Criteria andGoodsFromLessThanOrEqualTo(String value) {
            addCriterion("goodsFrom <=", value, "goodsFrom");
            return (Criteria) this;
        }

        public Criteria andGoodsFromLike(String value) {
            addCriterion("goodsFrom like", value, "goodsFrom");
            return (Criteria) this;
        }

        public Criteria andGoodsFromNotLike(String value) {
            addCriterion("goodsFrom not like", value, "goodsFrom");
            return (Criteria) this;
        }

        public Criteria andGoodsFromIn(List<String> values) {
            addCriterion("goodsFrom in", values, "goodsFrom");
            return (Criteria) this;
        }

        public Criteria andGoodsFromNotIn(List<String> values) {
            addCriterion("goodsFrom not in", values, "goodsFrom");
            return (Criteria) this;
        }

        public Criteria andGoodsFromBetween(String value1, String value2) {
            addCriterion("goodsFrom between", value1, value2, "goodsFrom");
            return (Criteria) this;
        }

        public Criteria andGoodsFromNotBetween(String value1, String value2) {
            addCriterion("goodsFrom not between", value1, value2, "goodsFrom");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("createTime is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("createTime is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("createTime =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("createTime <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("createTime >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("createTime >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("createTime <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("createTime <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("createTime in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("createTime not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("createTime between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("createTime not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andNowPriceIsNull() {
            addCriterion("nowPrice is null");
            return (Criteria) this;
        }

        public Criteria andNowPriceIsNotNull() {
            addCriterion("nowPrice is not null");
            return (Criteria) this;
        }

        public Criteria andNowPriceEqualTo(Float value) {
            addCriterion("nowPrice =", value, "nowPrice");
            return (Criteria) this;
        }

        public Criteria andNowPriceNotEqualTo(Float value) {
            addCriterion("nowPrice <>", value, "nowPrice");
            return (Criteria) this;
        }

        public Criteria andNowPriceGreaterThan(Float value) {
            addCriterion("nowPrice >", value, "nowPrice");
            return (Criteria) this;
        }

        public Criteria andNowPriceGreaterThanOrEqualTo(Float value) {
            addCriterion("nowPrice >=", value, "nowPrice");
            return (Criteria) this;
        }

        public Criteria andNowPriceLessThan(Float value) {
            addCriterion("nowPrice <", value, "nowPrice");
            return (Criteria) this;
        }

        public Criteria andNowPriceLessThanOrEqualTo(Float value) {
            addCriterion("nowPrice <=", value, "nowPrice");
            return (Criteria) this;
        }

        public Criteria andNowPriceIn(List<Float> values) {
            addCriterion("nowPrice in", values, "nowPrice");
            return (Criteria) this;
        }

        public Criteria andNowPriceNotIn(List<Float> values) {
            addCriterion("nowPrice not in", values, "nowPrice");
            return (Criteria) this;
        }

        public Criteria andNowPriceBetween(Float value1, Float value2) {
            addCriterion("nowPrice between", value1, value2, "nowPrice");
            return (Criteria) this;
        }

        public Criteria andNowPriceNotBetween(Float value1, Float value2) {
            addCriterion("nowPrice not between", value1, value2, "nowPrice");
            return (Criteria) this;
        }

        public Criteria andFreePriceIsNull() {
            addCriterion("freePrice is null");
            return (Criteria) this;
        }

        public Criteria andFreePriceIsNotNull() {
            addCriterion("freePrice is not null");
            return (Criteria) this;
        }

        public Criteria andFreePriceEqualTo(Float value) {
            addCriterion("freePrice =", value, "freePrice");
            return (Criteria) this;
        }

        public Criteria andFreePriceNotEqualTo(Float value) {
            addCriterion("freePrice <>", value, "freePrice");
            return (Criteria) this;
        }

        public Criteria andFreePriceGreaterThan(Float value) {
            addCriterion("freePrice >", value, "freePrice");
            return (Criteria) this;
        }

        public Criteria andFreePriceGreaterThanOrEqualTo(Float value) {
            addCriterion("freePrice >=", value, "freePrice");
            return (Criteria) this;
        }

        public Criteria andFreePriceLessThan(Float value) {
            addCriterion("freePrice <", value, "freePrice");
            return (Criteria) this;
        }

        public Criteria andFreePriceLessThanOrEqualTo(Float value) {
            addCriterion("freePrice <=", value, "freePrice");
            return (Criteria) this;
        }

        public Criteria andFreePriceIn(List<Float> values) {
            addCriterion("freePrice in", values, "freePrice");
            return (Criteria) this;
        }

        public Criteria andFreePriceNotIn(List<Float> values) {
            addCriterion("freePrice not in", values, "freePrice");
            return (Criteria) this;
        }

        public Criteria andFreePriceBetween(Float value1, Float value2) {
            addCriterion("freePrice between", value1, value2, "freePrice");
            return (Criteria) this;
        }

        public Criteria andFreePriceNotBetween(Float value1, Float value2) {
            addCriterion("freePrice not between", value1, value2, "freePrice");
            return (Criteria) this;
        }

        public Criteria andNumberIsNull() {
            addCriterion("number is null");
            return (Criteria) this;
        }

        public Criteria andNumberIsNotNull() {
            addCriterion("number is not null");
            return (Criteria) this;
        }

        public Criteria andNumberEqualTo(Integer value) {
            addCriterion("number =", value, "number");
            return (Criteria) this;
        }

        public Criteria andNumberNotEqualTo(Integer value) {
            addCriterion("number <>", value, "number");
            return (Criteria) this;
        }

        public Criteria andNumberGreaterThan(Integer value) {
            addCriterion("number >", value, "number");
            return (Criteria) this;
        }

        public Criteria andNumberGreaterThanOrEqualTo(Integer value) {
            addCriterion("number >=", value, "number");
            return (Criteria) this;
        }

        public Criteria andNumberLessThan(Integer value) {
            addCriterion("number <", value, "number");
            return (Criteria) this;
        }

        public Criteria andNumberLessThanOrEqualTo(Integer value) {
            addCriterion("number <=", value, "number");
            return (Criteria) this;
        }

        public Criteria andNumberIn(List<Integer> values) {
            addCriterion("number in", values, "number");
            return (Criteria) this;
        }

        public Criteria andNumberNotIn(List<Integer> values) {
            addCriterion("number not in", values, "number");
            return (Criteria) this;
        }

        public Criteria andNumberBetween(Integer value1, Integer value2) {
            addCriterion("number between", value1, value2, "number");
            return (Criteria) this;
        }

        public Criteria andNumberNotBetween(Integer value1, Integer value2) {
            addCriterion("number not between", value1, value2, "number");
            return (Criteria) this;
        }

        public Criteria andPirtureIsNull() {
            addCriterion("pirture is null");
            return (Criteria) this;
        }

        public Criteria andPirtureIsNotNull() {
            addCriterion("pirture is not null");
            return (Criteria) this;
        }

        public Criteria andPirtureEqualTo(String value) {
            addCriterion("pirture =", value, "pirture");
            return (Criteria) this;
        }

        public Criteria andPirtureNotEqualTo(String value) {
            addCriterion("pirture <>", value, "pirture");
            return (Criteria) this;
        }

        public Criteria andPirtureGreaterThan(String value) {
            addCriterion("pirture >", value, "pirture");
            return (Criteria) this;
        }

        public Criteria andPirtureGreaterThanOrEqualTo(String value) {
            addCriterion("pirture >=", value, "pirture");
            return (Criteria) this;
        }

        public Criteria andPirtureLessThan(String value) {
            addCriterion("pirture <", value, "pirture");
            return (Criteria) this;
        }

        public Criteria andPirtureLessThanOrEqualTo(String value) {
            addCriterion("pirture <=", value, "pirture");
            return (Criteria) this;
        }

        public Criteria andPirtureLike(String value) {
            addCriterion("pirture like", value, "pirture");
            return (Criteria) this;
        }

        public Criteria andPirtureNotLike(String value) {
            addCriterion("pirture not like", value, "pirture");
            return (Criteria) this;
        }

        public Criteria andPirtureIn(List<String> values) {
            addCriterion("pirture in", values, "pirture");
            return (Criteria) this;
        }

        public Criteria andPirtureNotIn(List<String> values) {
            addCriterion("pirture not in", values, "pirture");
            return (Criteria) this;
        }

        public Criteria andPirtureBetween(String value1, String value2) {
            addCriterion("pirture between", value1, value2, "pirture");
            return (Criteria) this;
        }

        public Criteria andPirtureNotBetween(String value1, String value2) {
            addCriterion("pirture not between", value1, value2, "pirture");
            return (Criteria) this;
        }

        public Criteria andMarkIsNull() {
            addCriterion("mark is null");
            return (Criteria) this;
        }

        public Criteria andMarkIsNotNull() {
            addCriterion("mark is not null");
            return (Criteria) this;
        }

        public Criteria andMarkEqualTo(Integer value) {
            addCriterion("mark =", value, "mark");
            return (Criteria) this;
        }

        public Criteria andMarkNotEqualTo(Integer value) {
            addCriterion("mark <>", value, "mark");
            return (Criteria) this;
        }

        public Criteria andMarkGreaterThan(Integer value) {
            addCriterion("mark >", value, "mark");
            return (Criteria) this;
        }

        public Criteria andMarkGreaterThanOrEqualTo(Integer value) {
            addCriterion("mark >=", value, "mark");
            return (Criteria) this;
        }

        public Criteria andMarkLessThan(Integer value) {
            addCriterion("mark <", value, "mark");
            return (Criteria) this;
        }

        public Criteria andMarkLessThanOrEqualTo(Integer value) {
            addCriterion("mark <=", value, "mark");
            return (Criteria) this;
        }

        public Criteria andMarkIn(List<Integer> values) {
            addCriterion("mark in", values, "mark");
            return (Criteria) this;
        }

        public Criteria andMarkNotIn(List<Integer> values) {
            addCriterion("mark not in", values, "mark");
            return (Criteria) this;
        }

        public Criteria andMarkBetween(Integer value1, Integer value2) {
            addCriterion("mark between", value1, value2, "mark");
            return (Criteria) this;
        }

        public Criteria andMarkNotBetween(Integer value1, Integer value2) {
            addCriterion("mark not between", value1, value2, "mark");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_goods
     *
     * @mbggenerated do_not_delete_during_merge Fri Dec 16 15:03:09 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_goods
     *
     * @mbggenerated Fri Dec 16 15:03:09 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}